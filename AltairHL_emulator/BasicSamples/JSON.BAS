100 WIDTH 150
150 PRINT "===================================================="
200 PRINT "OPEN WEATHER MAP IOT APP"
250 DELAY% = 20
300 PRINT "SEND WEATHER DATA TO IOT CENTRAL EVERY";DELAY%;"SECONDS"
350 RCOUNT% = 0

400 WHILE 1
450 PRINT "===================================================="
500 PRINT "Reading:";RCOUNT%
550 RCOUNT% = RCOUNT% + 1

600 REM GET TIME AS STRING
650 PORT = 42 : GOSUB 2700
700 PRINT "Time (UTC): ";RSTRING$

750 REM GET TEMPERATURE AS A STRING
800 PORT = 45 : GOSUB 2700 : TEMPERATURE$ = RSTRING$
900 PRINT "Temperature: ";TEMPERATURE$;" celsius"

950 REM GET PRESSURE AS A STRING
1000 PORT = 46 : GOSUB 2700 : PRESSURE$ = RSTRING$
1100 PRINT "Pressure: ";PRESSURE$;" millibars"

1150 REM GET HUMIDITY AS A STRING
1200 PORT = 47 : GOSUB 2700 : HUMIDITY$ = RSTRING$
1300 PRINT "Humidity: ";HUMIDITY$;"%"

1350 REM GET WEATHER OBSERVATION AS A STRING
1400 PORT = 48 : GOSUB 2700
1450 PRINT "Weather: ";RSTRING$

1460 REM GET AIR QUALITY INDEX AS A STRING
1465 PORT = 60 : GOSUB 2700 : AIRQUALITYINDEX$ = RSTRING$
1470 PRINT "Air Quality Index (US): ";RSTRING$

1500 REM GET LATITUDE AS A STRING
1550 PORT = 49 : GOSUB 2700 : LATITUDE$ = RSTRING$
1650 PRINT "Latitude: ";LATITUDE$

1700 REM GET LONGITUDE A STRING
1750 PORT = 50 : GOSUB 2700 : LONGITUDE$ = RSTRING$
1850 PRINT "Longitude: ";LONGITUDE$

1900 PRINT "BASIC free memory:"; FRE(0)

1950 REM GENERATE JSON THEN PUBLISH
2000 GOSUB 2250 : GOSUB 3300

2050 PRINT "Pause";DELAY%;"seconds."
2100 GOSUB 3000

2150 WEND

2200 END
2250 REM BUILD JSON STRING
2300 RJSON$ = "{"
2350 RJSON$ = RJSON$ + CHR$(34) + "temperature" + CHR$(34) + ":" + TEMPERATURE$ + ","
2400 RJSON$ = RJSON$ + CHR$(34) + "pressure" + CHR$(34) + ":" +  PRESSURE$ + ","
2450 RJSON$ = RJSON$ + CHR$(34) + "humidity" + CHR$(34) + ":" +  HUMIDITY$ + ","
2500 RJSON$ = RJSON$ + CHR$(34) + "latitude" + CHR$(34) + ":" +  LATITUDE$ + ","
2550 RJSON$ = RJSON$ + CHR$(34) + "longitude" + CHR$(34) + ":" +  LONGITUDE$ + ","
2560 RJSON$ = RJSON$ + CHR$(34) + "aqi" + CHR$(34) + ":" +  AIRQUALITYINDEX$
2600 RJSON$ = RJSON$ + "}"
2650 RETURN

2700 REM SUBROUTINE READS STRING DATA FROM PORT UNTIL NULL CHARACTER
2750 RSTRING$ = ""
2800 C=INP(PORT)
2850 IF C = 0 THEN RETURN
2900 RSTRING$ = RSTRING$ + CHR$(C)
2950 GOTO 2800
3000 REM SUBROUTINE DELAYS PROGRAM EXECUTION BY DELAY% SECONDS
3050 REM YOU COULD 'WAIT 30, 1, 0' BUT IT IS A BLOCKING STATEMENT
3100 OUT 30, DELAY%
3150 PAUSE% = INP(30)
3200 IF PAUSE% = 1 THEN GOTO 3150
3250 RETURN

3300 REM SUBROUTINE PUBLISHES JSON TO AZURE IOT
3350 LENGTH% = LEN(RJSON$)
3400 IF LENGTH% = 0 THEN RETURN
3450 IF LENGTH% > 256 THEN RETURN
3500 PRINT "PUBLISHING JSON TO AZURE IOT"
3550 PRINT RJSON$
3600 FOR DATAINDEX% = 1 TO LENGTH%
3650 OUT 31, ASC(MID$(RJSON$, DATAINDEX%, 1))
3700 NEXT DATAINDEX%
3750 OUT 31, 0
3800 RETURN

