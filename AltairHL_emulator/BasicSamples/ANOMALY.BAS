100 WIDTH 150
200 PRINT "===================================================="
300 PRINT "OPEN WEATHER MAP IOT APP"
400 DELAY% = 10
500 WEATHERPORT = 35
600 LOCATIONPORT = 37
700 POLLUTIONPORT = 39
800 DEF FNNEXTJITTER(ROW#, DELAY%) = ROW# + 1 + (INT(RND * 60) * 180 / DELAY% )
900 DEF FNJITTERTEMPERATURE(TEMPERATURE$) = VAL(TEMPERATURE$) + 30 - INT(RND * 20) : REM Return temperature plus random value
1000 REM GET RANDOM NUMBER SEED FROM PLATFORM
1100 PORT = 44 : GOSUB 4700 : RANDOMIZE VAL(RSTRING$)
1200 PRINT "SEND WEATHER DATA TO IOT CENTRAL EVERY";DELAY%;"SECONDS"
1300 RCOUNT# = 0
1400 NEXTJITTER# = FNNEXTJITTER(RCOUNT#, DELAY%)
1500 WHILE 1
1600 RCOUNT# = RCOUNT# + 1
1700 PRINT "===================================================="
1800 PRINT CHR$(27) + "[33;22;24m" + "Reading:"; RCOUNT#; "| Next jitter:";NEXTJITTER#; "| BASIC free memory:"; FRE(0); CHR$(27) + "[0m"
1900 REM GET TIME AS STRING
2000 PORT = 43 : GOSUB 4700 : PRINT "Time (local): ";RSTRING$
2100 PORT = WEATHERPORT : PDATA = 0 : GOSUB 4700 : TEMPERATURE$ = RSTRING$
2200 PORT = WEATHERPORT : PDATA = 1 : GOSUB 4700 : PRESSURE$ = RSTRING$
2300 PORT = WEATHERPORT : PDATA = 2 : GOSUB 4700 : HUMIDITY$ = RSTRING$
2400 PORT = POLLUTIONPORT : PDATA = 0 : GOSUB 4700 : AIRQUALITYINDEX$ = RSTRING$
2500 PORT = LOCATIONPORT : PDATA = 0 : GOSUB 4700 : LATITUDE$ = RSTRING$
2600 PORT = LOCATIONPORT : PDATA = 1 : GOSUB 4700 : LONGITUDE$ = RSTRING$
2700 IF RCOUNT# = NEXTJITTER# THEN TEMPERATURE$ = STR$(FNJITTERTEMPERATURE(TEMPERATURE$)) : NEXTJITTER# = FNNEXTJITTER(RCOUNT#, DELAY%)
2800 PRINT : PRINT "Celsius", "Millibars", "Humidity %", "AQI (CAQI)", "Latitude", "Longitude"
2900 PRINT TEMPERATURE$, PRESSURE$, HUMIDITY$, AIRQUALITYINDEX$, LATITUDE$, LONGITUDE$
3000 PRINT
3100 GOSUB 3700 : REM Generate JSON
3200 GOSUB 5900 : REM Publish JSON
3300 PRINT: PRINT CHR$(27) + "[31;22;24m" + "Sleep for";DELAY%;"seconds." + CHR$(27) + "[0m"
3400 GOSUB 5400
3500 WEND
3600 END
3700 REM BUILD JSON STRING
3800 RJSON$ = "{"
3900 RJSON$ = RJSON$ + CHR$(34) + "temperature" + CHR$(34) + ":" + TEMPERATURE$ + ","
4000 RJSON$ = RJSON$ + CHR$(34) + "pressure" + CHR$(34) + ":" +  PRESSURE$ + ","
4100 RJSON$ = RJSON$ + CHR$(34) + "humidity" + CHR$(34) + ":" +  HUMIDITY$ + ","
4200 RJSON$ = RJSON$ + CHR$(34) + "latitude" + CHR$(34) + ":" +  LATITUDE$ + ","
4300 RJSON$ = RJSON$ + CHR$(34) + "longitude" + CHR$(34) + ":" +  LONGITUDE$ + ","
4400 RJSON$ = RJSON$ + CHR$(34) + "aqi" + CHR$(34) + ":" +  AIRQUALITYINDEX$
4500 RJSON$ = RJSON$ + "}"
4600 RETURN
4700 REM SUBROUTINE READS STRING DATA FROM PORT UNTIL NULL CHARACTER
4800 OUT PORT, PDATA
4900 RSTRING$ = ""
5000 C=INP(200)
5100 IF C = 0 THEN RETURN
5200 RSTRING$ = RSTRING$ + CHR$(C)
5300 GOTO 5000
5400 REM SUBROUTINE DELAYS PROGRAM EXECUTION BY DELAY% SECONDS
5500 OUT 30, DELAY%
5600 IF INP(30) = 1 THEN GOTO 5600
5700 WAIT 31, 1, 1 : REM WAIT FOR PUBLISH JSON PENDING TO GO FALSE
5800 RETURN
5900 REM SUBROUTINE PUBLISHES JSON TO AZURE IOT
6000 LENGTH% = LEN(RJSON$)
6100 IF LENGTH% = 0 THEN RETURN
6200 IF LENGTH% > 256 THEN RETURN
6300 PRINT CHR$(27) + "[94;22;24m" + "PUBLISHING JSON TO AZURE IOT" + CHR$(27) + "[0m"
6400 PRINT RJSON$
6500 FOR DATAINDEX% = 1 TO LENGTH%
6600 OUT 31, ASC(MID$(RJSON$, DATAINDEX%, 1))
6700 NEXT DATAINDEX%
6800 OUT 31, 0 : REM TERMINATING NULL CAUSE PUBLISH TO AZURE IOT
6900 RETURN