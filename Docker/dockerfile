# syntax=docker/dockerfile:1.7

# Allow per-platform override (optional)
ARG BASE_IMAGE=debian:trixie-slim

# =========================
# 1) Build stage
# =========================
FROM ${BASE_IMAGE} AS builder
ENV DEBIAN_FRONTEND=noninteractive

# Build dependencies (development headers, compilers, tools)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libuv1-dev \
    cmake \
    build-essential \
    curl \
    libcurl4-openssl-dev \
    libssl-dev \
    uuid-dev \
    ca-certificates \
    git \
    libi2c-dev \
    libgpiod-dev \
 && rm -rf /var/lib/apt/lists/* && apt-get clean

# Clone source code with caching
ARG REPO_URL=https://github.com/gloveboxes/Altair-8800-Emulator.git
RUN git clone --depth 1 --recurse-submodules ${REPO_URL} /Altair-8800-Emulator

# Build application
WORKDIR /Altair-8800-Emulator/src
RUN mkdir -p build \
 && cmake -B build -DCMAKE_BUILD_TYPE=Release \
 && cmake --build build --config Release --target all -j"$(nproc)"

# =========================
# 2) Runtime stage
# =========================
FROM ${BASE_IMAGE} AS runtime
ENV DEBIAN_FRONTEND=noninteractive

# Runtime dependencies (Trixie uses *t64 packages)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libuv1t64 \
    libcurl4t64 \
    libssl3t64 \
    libuuid1 \
    ca-certificates \
    libgpiod3 \
    gpiod \
    python3 \
    i2c-tools \
    curl \
 && rm -rf /var/lib/apt/lists/* && apt-get clean

# Create non-root user with GPIO/I2C group access
RUN groupadd -r altair \
 && useradd -r -g altair -G i2c,spi,gpio altair || useradd -r -g altair altair

# Copy built artifacts
COPY --from=builder /Altair-8800-Emulator/src/build/Altair_emulator /usr/local/bin/
COPY --from=builder /Altair-8800-Emulator/Terminal /app/Terminal
COPY --from=builder /Altair-8800-Emulator/src/Disks /app/Disks
COPY --from=builder /Altair-8800-Emulator/src/AppSamples /app/AppSamples

# Copy startup script
COPY altair.sh /app/altair.sh
RUN chmod +x /app/altair.sh

# Configure runtime
WORKDIR /app
RUN chown -R altair:altair /app
USER altair

EXPOSE 8082 80

HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:80/ || exit 1

CMD ["./altair.sh"]