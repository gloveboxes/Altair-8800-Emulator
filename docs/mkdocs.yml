site_name: Altair 8800 Emulator
site_author: Dave Glover
site_description: >-
  Altair 8800 Emulator
# site_url: https://github.com/gloveboxes/AltairEverywhere

# Repository ..................................................
repo_name: Altair 8800 Emulator
repo_url: https://github.com/gloveboxes/AltairEverywhere

# Copyright ...................................................
copyright: >
  Copyright &copy; 2023 - present Microsoft

nav:
  - Introduction: index.md
  - Fundamentals:
    - Introduction: "20-fundamentals/05-Introduction.md"
    - Deployment options: "20-fundamentals/10-deployment-options.md"
    - The altair emulator: "20-fundamentals/23-Altair-emulator.md"
    - Start the web terminal: "20-fundamentals/25-Web-Terminal.md"
    - Learn about CP/M: "20-fundamentals/30-introduction-cpm.md"
    - Rebooting the emulator: "20-fundamentals/40-Rebooting-the-Altair.md"
  - Deploy with Docker:
    - Introduction: "40-deploy-with-docker/10-introduction.md"
    - Install prerequisites: "40-deploy-with-docker/15-install-prerequisites.md"
    - Start the Altair emulator: "40-deploy-with-docker/17-start-container.md"
    - Add cloud services: "40-deploy-with-docker/20-Start-cloud-connected-Altair.md"
    - Build docker images: "40-deploy-with-docker/100-Create-Docker-images.md" 
  - Build from source:
    - Introduction: "45-build-from-source/01-Introduction.md"
    - Install Prerequisites:
      - Linux: "45-build-from-source/Install prerequisites/01-Linux-users.md"
      - macOS: "45-build-from-source/Install prerequisites/02-macOS-users.md"
      - Windows: "45-build-from-source/Install prerequisites/03-Windows-users.md"
      - Raspberry Pi OS: "45-build-from-source/Install prerequisites/04-Raspberry-Pi-users.md"
    - Clone the Altair repo: "45-build-from-source/02-Clone-Altair-repo.md"
    - Build from Visual Studio Code: "45-build-from-source/03-Build-from-vs-code.md"
    - Build from the command line: "45-build-from-source/04-Compile-from-CLI.md"
    - Start the emulator: "45-build-from-source/05-Run-the-emulator.md"
    - Autostart the Altair services: "45-build-from-source/30-auto-start.md"
  - Program the Altair:
    - Introduction: "60-programming/00-Introduction.md"
    - Manuals: "60-programming/00-Manuals.md"
    - Editing files: "60-programming/01-Editing-files.md"
    - Intel 8080 IO Ports: "60-programming/01-i8080-IO-Ports.md"
    - Microsoft BASIC: "60-programming/02-Microsoft-BASIC-programming.md"
    - C programming: "60-programming/03-C-programming.md"
    - Intel 8080 Assembler: "60-programming/04-Assembly-programming.md"
    - Altair BASIC programming: "60-programming/05-Altair-BASIC-programming.md"
    - Front panel programming: "60-programming/06-Front-panel-programming.md"
  - Run on Azure Sphere:
    - Introduction: "50-azsphere/01-Introduction.md"
    - Architecture: "50-azsphere/03-architecture.md"
    - Deploy the Altair:
      - Deployment options: "50-azsphere/01-Deploy-the-Altair/01-Deployment-options.md"
      - Clone the Altair repo: "50-azsphere/01-Deploy-the-Altair/02-Clone-Altair-repo.md"
      - Deploy pre-built images: "50-azsphere/01-Deploy-the-Altair/03-Deploy-prebuilt.md"
      - Wi-Fi configuration: "50-azsphere/01-Deploy-the-Altair/04-WiFi-configuration.md"
      - Create a boot SD card: "50-azsphere/01-Deploy-the-Altair/05-Create-boot-SD-card.md"
      - Power management: "50-azsphere/01-Deploy-the-Altair/06-Power-management.md"
      - Connect Altair web terminal: "50-azsphere/01-Deploy-the-Altair/07-Connect-Altair-web-terminal.md"
    - Cloud services:
      - Adding Cloud services: "50-azsphere/Cloud-services/01-Add-cloud-services.md"
    - Compile and deploy:
      - Install developer tools: "50-azsphere/Compile-and-deploy/01-Install-developer-tools.md"
      - Deploy the Altair emulator: "50-azsphere/Compile-and-deploy/02-Deploy-the-Altair-to-Azure-Sphere.md"
    - Manage disk images: "50-azsphere/40-Manage-disk-images.md"
 

plugins:
  - search
  - glightbox
  - include-markdown
  # - timetoread:
  #     wpm: 180
  - i18n:
      docs_structure: folder
      languages:
        - locale: en
          name: English
          default: true
          site_name: Altair 8800 Emulator
          admonition_translations:
            tip: tip
            warning: Warning
            info: Information
            note: Note
            danger: Danger
            success: Success
            question: Question


theme:
  name: material
  logo: media/favicon.ico
  favicon: media/favicon.ico
  features:
    - navigation.instant
    - navigation.footer
    - content.code.copy
    - navigation.tabs.sticky
    - content.tabs.link

  # Change Font: https://squidfunk.github.io/mkdocs-material/setup/changing-the-fonts/?h=fonts
  # Google Fonts Supported By Default: https://fonts.google.com/
  font:
    code: Roboto Mono #Monospaced
    text: Roboto #Regular
  # logo: docs/media/azure-ai-studio.svg
  palette:
    - scheme: default # Light Mode
      primary: black
      accent: pink
      toggle:
        icon: material/brightness-2
        name: Switch to dark mode
    - scheme: slate # Dark Mode
      primary: amber
      accent: cyan
      toggle:
        icon: material/brightness-7
        name: Switch to light mode

markdown_extensions:
  - toc:
      permalink: true
      toc_depth: 2
  - admonition
  - pymdownx.details
  - pymdownx.superfences
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.tasklist:
      custom_checkbox: true
  - attr_list
  - md_in_html
  # - pymdownx.emoji:
  # emoji_index: !!python/name:material.extensions.emoji.twemoji
  # emoji_generator: !!python/name:material.extensions.emoji.to_svg

extra_css:
  - css/custom.css
